import javax.swing.*;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import java.awt.*;
import java.awt.event.*;

public class Main {
    public Main() {
        Race race1 = new Race();
        race1.readFile("debug.txt");

        raceText.setText(race1.getText());

        startButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!Clock.isRunning()) {
                    Clock.setLastTick(System.currentTimeMillis());
	                Counter.reset();
	                Clock.start();
                    playerInput.setEditable(true);
                    playerInput.requestFocus();
                }

            }
        });

        restartButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Clock.restart();
	            race1.reset();
                Counter.reset();
                playerInput.setEditable(false);
                playerInput.setText("");
                startButton.requestFocus();
            }
        });

	    playerInput.addCaretListener(new CaretListener() {
		    @Override
		    public void caretUpdate(CaretEvent caretEvent) {

			    // using invokeLater because CaretListener or DocumentListener throw mutation in notification exception
			    // and KeyListener executes before text field is changed

			    SwingUtilities.invokeLater(new Runnable() {
				    @Override
				    public void run()
				    {
					    if (playerInput.isEditable()) {
						    if (race1.next(playerInput.getText())) {
							    Counter.increment();
							    Counter.count(Clock.getSeconds());
							    playerInput.setText("");

							    if (race1.isFinished()) {
								    Clock.stop();
								    playerInput.setEditable(false);
								    playerInput.setText("");
								    race1.reset();
								    restartButton.requestFocus();
							    }
						    }
					    }
				    }
			    });
		    }
	    });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Sanic Type");
        frame.setContentPane(new Main().panel1);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    private JPanel panel1;
    private JTextPane raceText; // TODO: add formatting for shown text, race position
//	https://stackoverflow.com/questions/9650992/how-to-change-text-color-in-the-jtextarea
    private JTextField playerInput;
    private JButton startButton;
    private JButton restartButton;
    private WPMCounter Counter;
    private RaceTimer Clock;


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setMinimumSize(new Dimension(406, 200));
        panel1.setOpaque(false);
        panel1.setPreferredSize(new Dimension(406, 200));
        panel1.setBorder(BorderFactory.createTitledBorder(""));
        startButton = new JButton();
        startButton.setText("Start");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        panel1.add(startButton, gbc);
        restartButton = new JButton();
        restartButton.setText("Restart");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        panel1.add(restartButton, gbc);
        Clock = new RaceTimer();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        panel1.add(Clock, gbc);
        Counter = new WPMCounter();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        panel1.add(Counter, gbc);
        playerInput = new JTextField();
        playerInput.setEditable(false);
        playerInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(playerInput, gbc);
        raceText = new JTextPane();
        raceText.setEditable(false);
        raceText.setEnabled(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(raceText, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}